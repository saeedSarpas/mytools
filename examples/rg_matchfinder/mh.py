"""mh.py
Load matchinghalos ascii file
"""

import numpy as np


class MatchingHalo(object):
    """MatchingHalos class"""

    def __init__(self, path):
        """Initializing matchinghalos file

        Parameters
        ----------
        path : str
            path to matchinghalos file generated by halomatcher.c
        """

        self.path = path
        self.data, self.datatype = [], []
        self.header = {}

        with open(path) as _file:
            for i, line in enumerate(_file):
                if i >= 8: break
                keyvalue = line.split(':')
                key = keyvalue[0].strip('#').strip().lower().replace(' ', '_')
                val = keyvalue[1].strip('\n').strip()
                self.header[key] = _2number(val)

    def load(self):
        """Loading matchinghalos file"""

        self.datatype = [('id1', np.int), ('mass1', np.float32),
                         ('id2', np.int), ('mass2', np.float32),
                         ('goodness', np.float32)]

        self.data = np.genfromtxt(self.path, skip_header=8, dtype=self.datatype)

def _2number(string):
    """Converting a string to int or float

    Parameters
    ----------
    string : str
        A string for converting to int or float

    Returns
    -------
    int or float
    """

    try:
        return int(string)
    except ValueError:
        try:
            return float(string)
        except ValueError:
            return string
